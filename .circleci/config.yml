version: 2.1

jobs:
  # CI
  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: root
          DB_PASSWORD: kota1171997117
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: kota1171997117
          MYSQL_DATABASE: recofit_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: bundle installの結果をリストア
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock"}}
            - v1-dependencies-
      - run:
          name: bundle install
          command: bundle install --path vendor/bundle
      - save_cache:
          name: bundle installの結果をキャッシュ
          paths: ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: データベースのセットアップ
          command: bundle exec rake db:schema:load
      - run:
          name: RSpecのテストを実行
          command: bundle exec rspec
      - run:
          name:  RuboCopのテストを実行
          command: bundle exec rubocop
  #CD
  deploy:
    docker:
      - image: circleci/python:3.6-jessie
      - image: buildpack-deps:trusty
    working_directory: ~/
    steps:
      - run: sudo pip install awscli
      - run:
          name: "authorize-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 authorize-security-group-ingress --group-id sg-0d771de46ad7bb458 --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh
      - add_ssh_keys:
      - run:
          name: deploy
          command: ssh -oStrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} 'mkdir success'
      - run:
          name: "revoke-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 revoke-security-group-ingress --group-id sg-0d771de46ad7bb458 --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master